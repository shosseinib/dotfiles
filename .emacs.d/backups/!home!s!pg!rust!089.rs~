struct SeaCreature {
    pub name: String,
    noise: String,
}

impl SeaCreature {
    pub fn get_sound(&slef)-> &str {
	&self.noise
    }
}

trait NoiseMaker {
    fn make_noise(&self) {
	
    }
}

impl NoiseMaker for SeaCreature {
    fn make_noise(&self) {
	println!("{}", &self.get_sound());
    }
}

fn generic_make_noise(creature: &impl NoiseMaker) {
    creature.make_noise();
}

fn main() {
    let creature = SeaCreature{
	name: String::from("geriss"),
	noise: String::from("blooz"),
    };
    generic_make_noise(&creature);
}
